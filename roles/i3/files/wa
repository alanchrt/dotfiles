#!/usr/bin/env python

import sys
import os
from pathlib import Path
import requests
from prompt_toolkit import PromptSession
from prompt_toolkit.history import FileHistory
from prompt_toolkit.styles import Style
from yaspin import yaspin

HISTORY_FILE = os.path.join(Path.home(), '.wahistory')
APPID_FILE = os.path.join(Path.home(), '.waid')

with open(APPID_FILE) as f:
    APPID = f.read().strip()

style = Style.from_dict({
    # default
    '':          '#f8f8f2',

    # prompt
    'logo':    '#ff79c6',
    'colon': '#ff5555',
})

prompt_text = [
    ('class:logo', 'ð–£” '),
    ('class:colon',    ': '),
]


def main():
    history = FileHistory(HISTORY_FILE)
    session = PromptSession(history=history)

    while True:
        try:
            input = session.prompt(prompt_text, style=style)

            if input == 'exit':
                raise EOFError

            with yaspin():
                response = requests.get('https://api.wolframalpha.com/v2/query', params={
                    'input': input,
                    'appid': APPID,
                    'output': 'json',
                    })

            result = response.json()

            try:
                pod = next(pod for pod in result['queryresult']['pods'] if pod.get('primary'))
                subpod = next(subpod for subpod in pod['subpods'] if subpod.get('plaintext'))
                print(subpod['plaintext'])
            except (StopIteration, KeyError):
                print('No answer available')


        except KeyboardInterrupt:
            continue

        except EOFError:
            sys.exit()


if __name__ == "__main__":
    main()
